{"version":3,"sources":["components/LoginModal/LoginModal.js","components/Header/Header.js","components/Main/Main.js","components/Footer/Footer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["LoginModal","props","onChangeLogin","submitLogin","Modal","this","size","aria-labelledby","centered","Form","className","onSubmit","Group","Label","Control","id","type","onChange","placeholder","Button","variant","Component","Header","onChangeSearch","submitSearch","login","nickName","React","useState","modalShow","setModalShow","Container","fluid","Row","Col","xs","Navbar","Brand","href","xl","md","onClick","show","onHide","Main","data","value","changePagePrev","changePageNext","page","totalResults","stringResults","searchData","Search","renderElement","Object","values","map","item","index","key","uniqid","Image","src","Poster","rounded","Title","Year","imdbID","Type","Pagination","Prev","Item","active","Next","Footer","App","e","target","url","preventDefault","destructor","setState","state","renderAfterChangePage","fetch","responceInfo","json","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.105fc241.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n} from 'react-bootstrap';\r\n\r\nclass LoginModal extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.onChangeLogin = props.onChangeLogin;\r\n    this.submitLogin = props.submitLogin;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"xs\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Form\r\n          className=\"text-center modal-form bg-dark text-light\"\r\n          onSubmit={this.submitLogin}\r\n        >\r\n          <Form.Group>\r\n            <Form.Label className=\"title-form\">Send your Nickname</Form.Label>\r\n            <Form.Control\r\n              id=\"formName\"\r\n              type=\"text\"\r\n              onChange={this.onChangeLogin}\r\n              placeholder=\"NickName\"\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            variant=\"outline-light\"\r\n            type=\"submit\"\r\n            className=\"button\"\r\n          >\r\n            LogIn\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;\r\n","import React from 'react';\nimport { Container, Row, Col, Form, Button, Navbar } from 'react-bootstrap';\n\nimport LoginModal from '../LoginModal/LoginModal';\n\nconst Header = ({\n  onChangeSearch,\n  submitSearch,\n  onChangeLogin,\n  submitLogin,\n  login,\n  nickName\n}) => {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <Container className=\"bg-dark header\" fluid>\n      <Form\n        className=\"text-center\"\n        onSubmit={submitSearch}\n      >\n        <Row>\n          <Col xs={2}>\n            <Navbar.Brand href=\"#home\" className=\"text-light\">Movie Catalog</Navbar.Brand>\n          </Col>\n          <Col\n            xl={7}\n            md={6}\n            xs={5}\n          >\n            <Form.Control\n              id=\"form\"\n              type=\"text\"\n              onChange={onChangeSearch}\n              placeholder=\"Text message\"\n              className=\"send-form\"\n            />\n          </Col>\n          <Col\n            xl={1}\n            md={2}\n            xs={3}\n          >\n            <Button\n              variant=\"outline-light\"\n              type=\"submit\"\n              className=\"button\"\n            >\n              Search\n              </Button>\n          </Col>\n          {(!login) && (\n            <Col xs={2} className=\"header-buttons\">\n              <Button className=\"button\" variant=\"outline-light\" onClick={() => setModalShow(true)}>\n                LogIn\n              </Button>\n              <LoginModal\n                show={modalShow}\n                onHide={() => setModalShow(false)}\n                onChangeLogin={onChangeLogin}\n                submitLogin={submitLogin}\n              />\n            </Col>\n          )}\n          {(login) && (\n            <Col xs={2}>\n              <h3>{nickName}</h3>\n            </Col>\n          )}\n        </Row>\n      </Form>\n    </Container>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container, Row, Col, Image, Pagination } from 'react-bootstrap';\nimport uniqid from 'uniqid';\n\nimport './main.css';\n\nconst Main = ({ data, value,  changePagePrev, changePageNext, page }) => {\n  const totalResults = data.totalResults;\n  const stringResults = `You serched for: ${value}, ${totalResults} results found`;\n\n  const searchData = data.Search;\n\n  const renderElement = Object.values(searchData).map((item, index) => (\n    <>\n      {(index === 0 || index === 5) && (\n        <Col key={uniqid()} xs={1}></Col>\n      )}\n      <Col\n        key={uniqid()}\n        xl={2}\n        className='image-block'\n      >\n        <Image src={item.Poster} className='image' rounded fluid />\n        <h5 className='title'>{item.Title}</h5>\n        <p className='text'>{item.Year}</p>\n        <p className='text'>{item.imdbID}</p>\n        <p className='text'>{item.Type}</p>\n      </Col>\n      {(index === 4 || index === 9) && (\n        <Col key={uniqid()} xs={1}></Col>\n      )}\n    </>\n  ));\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h3>{stringResults}</h3>\n        </Col>\n      </Row>\n      <Row>\n        {renderElement}\n      </Row>\n      <Row>\n        <Col className='pagination'>\n          <Pagination className=\"bg-dark\">\n            <Pagination.Prev onClick={changePagePrev} />\n            <Pagination.Item active>{page}</Pagination.Item>\n            <Pagination.Next onClick={changePageNext} />\n          </Pagination>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n  return (\n    <Container className=\"fixed-bottom bg-dark\" fluid>\n      <Row>\n        <Col>\n          <h4 className=\"text-light\">by enerjaizzzer </h4>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Header from '../Header/Header';\nimport Main from '../Main/Main';\nimport Footer from '../Footer/Footer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      login: false,\n      nickName: '',\n      page: 1,\n    };\n  }\n\n  onChangeSearch = (e) => {\n    this.value = e.target.value;\n\n    this.url = `https://www.omdbapi.com/?i=tt3896198&apikey=8523cbb8&s=${this.value}&page=1`;\n  }\n\n  submitSearch = (e) => {\n    e.preventDefault();\n    this.destructor()\n  }\n\n  async destructor() {\n    const responceInfo = await fetch(this.url);\n    const data = await responceInfo.json();\n\n    this.setState(() => {\n      return {\n        data: data,\n      }\n    })\n  }\n\n  onChangeLogin = (e) => {\n    this.nickName = e.target.value;\n  }\n\n  submitLogin = () => {\n    this.setState(() => {\n      return {\n        login: true,\n        nickName: this.nickName,\n      }\n    })\n  }\n\n  changePagePrev = () => {\n    this.page = this.state.page - 1;\n    this.renderAfterChangePage()\n  }\n\n  changePageNext = () => {\n    this.page = this.state.page + 1;\n    this.renderAfterChangePage()\n  }\n\n  renderAfterChangePage = () => {\n    this.url = `https://www.omdbapi.com/?i=tt3896198&apikey=8523cbb8&s=${this.value}&page=${this.page}`\n    this.setState(() => {\n      return {\n        page: this.page,\n      }\n    })\n    this.destructor()\n  }\n\n  render() {\n    return (\n      <>\n        <Header\n          onChangeSearch={this.onChangeSearch}\n          submitSearch={this.submitSearch}\n          onChangeLogin={this.onChangeLogin}\n          submitLogin={this.submitLogin}\n          login={this.state.login}\n          nickName={this.state.nickName}\n        />\n        {(this.state.data) && (\n          <Main\n            data={this.state.data}\n            value={this.value}\n            changePagePrev={this.changePagePrev}\n            changePageNext={this.changePageNext}\n            page={this.state.page}\n          />\n        )}\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}